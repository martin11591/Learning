<html>
<head>
<style type=text/css>v\:* { behavior: url(#default#VML); }</style>
</head>
<body>
<table>
<tr>
<td><div id="graphdiv" class="graph"></div></td>
<td style="vertical-align:top">
<input id="XA" value=6 />,<input id="YA" value=8 />,<input id="ZA" value=7.5 /> - po³o¿enie oka obserwatora<br>
<input id="XB" value=0 />,<input id="YB" value=0 />,<input id="ZB" value=0 /> - punkt skierowania wzroku obserwatora<br>
<input id="FI" value=0 /> - k¹t horyzontu<br>
<input id="warK" value=10 /> - wspó³czynnik powiêkszenia<br>
<input id="warD" value=60 /> - odleg³oœæ obserwator-ekran<br>
<button onclick="szescian()">Rysuj()</button>
</td>
</tr>
</table>
<script>
czysc();
function czysc() {
txtS="<v:group style=\"antialias:true; width=500px; height=500px\" coordsize=\"1000,1000\" coordorigin=\"0,0\">";
txtL="";
txtK="<\/v:group>";
line(0,0,1000,1000,"0px","white",0);
draw();
}
function draw() {document.all.graphdiv.innerHTML=txtS+txtL+txtK}
function line(x1,y1,x2,y2,sw,col,aa) {
if (aa==0) {aa="false"} else {aa="true"}
txtL+="<v:line style=\"antialias: "+aa+"\" from=\""+x1+","+y1+"\" to=\""+x2+","+y2+"\"><v:stroke weight=\""+sw+"\"; color=\""+col+"\";\/><\/v:line>";
}
function szescian() {
czysc();
var X=new Array(0,1,-1,-1,1,1,-1,-1,1); // wierzcho³ki szeœcianu
var Y=new Array(0,1,1,-1,-1,1,1,-1,-1);
var Z=new Array(0,1,1,1,1,-1,-1,-1,-1);
this.X=X;
this.Y=Y;
this.Z=Z;
this.K="122334411556677885263748";
this.xa=document.all.XA.value; // po³o¿enie
this.ya=document.all.YA.value; // oka
this.za=document.all.ZA.value; // obserwatora

this.xb=document.all.XB.value; // punkt
this.yb=document.all.YB.value; // skierowania wzroku
this.zb=document.all.ZB.value; // obserwatora

this.fi=document.all.FI.value; // k¹t horyzontu

this.k=document.all.warK.value; // wspó³czynnik powiêkszenia

this.d=document.all.warD.value; // odleg³oœæ obserwator-ekran
var x,y,z,x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4,x5,y5,z5,x6,y6,z6,u,v;
rysujSzescian(false);
}
function rysujSzescian(czyTak,ile) {
var Kol=new Array();
var Wiersz=new Array();
Kol.push(0);
Wiersz.push(0);
for (var i=1; i<=8; i++) {
x=X[i];
y=Y[i];
z=Z[i];
transformacja();
Kol.push(kol);
Wiersz.push(wiersz);
}
Linia=0;
while (K.length>0) {
i=Math.floor(parseFloat(K.substring(0,1)));
j=Math.floor(parseFloat(K.substring(1,2)));
line (Kol[i],Wiersz[i],Kol[j],Wiersz[j],"1px","black",1,"linia"+Linia);
K=K.substring(2);
Linia+=1;
}
draw();
if (czyTak==true) {
if (ile<1) {ile=1}
this.Kol=Kol;
this.Wiersz=Wiersz;
rysujPowierzchnieSiodlowa(Math.floor(parseFloat(ile)));
}
}
function rysujPowierzchnieSiodlowa(n) {
for (var r=0; r<=n; r++) {
k1=Kol[2]+r*(Kol[5]-Kol[2])/n;
w1=Wiersz[2]+r*(Wiersz[5]-Wiersz[2])/n;
k2=Kol[7]+r*(Kol[4]-Kol[7])/n;
w2=Wiersz[7]+r*(Wiersz[4]-Wiersz[4])/n;
line(k1,w1,k2,w2,"1px","black",1);
}
line(Kol[2],Wiersz[2],Kol[5],Wiersz[5],"1px","black",1);
line(Kol[4],Wiersz[4],Kol[7],Wiersz[7],"1px","black",1);
draw();
}
function transformacja() {
x1=x-xa;
y1=y-ya;
z1=z-za;
x2=x1;
y2=z1;
z2=-y1;
xd=xb-xa;
yd=yb-ya;
zd=zb-za;
d1=Math.sqrt(xd*xd+yd*yd);
if (d1!=0) {
x3=(yd*x2+xd*z2)/d1;
y3=y2;
z3=(-xd*x2+yd*z2)/d1;
}
d2=Math.sqrt(xd*xd+yd*yd+zd*zd);
x4=x3;
y4=(d1*y3+zd*z3)/d2;
z4=(-zd*y3+d1*z3)/d2;
omega=fi*Math.PI/180;
x5=Math.cos(omega)*x4+Math.sin(omega)*y4;
y5=-Math.sin(omega)*x4+Math.cos(omega)*y4;
z5=z4;
x6=x5;
y6=y5;
z6=-z5;
u=x6/z6*d;
v=y6/z6*d;
kol=500+k*u;
if (kol<0) {kol=0}
if (kol>1000) {kol=1000}
wiersz=500-k*v;
if (wiersz<0) {wiersz=0}
if (wiersz>1000) {wiersz=1000}
return;
}
</script>
</body>
</html>